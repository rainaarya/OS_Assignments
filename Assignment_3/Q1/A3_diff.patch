diff -u -r linux-5.14.6/arch/x86/entry/syscalls/syscall_64.tbl linux-5.14.6-A3/arch/x86/entry/syscalls/syscall_64.tbl
--- linux-5.14.6/arch/x86/entry/syscalls/syscall_64.tbl	2021-09-18 15:44:05.000000000 +0400
+++ linux-5.14.6-A3/arch/x86/entry/syscalls/syscall_64.tbl	2021-12-14 18:02:52.337052971 +0400
@@ -369,6 +369,8 @@
 445	common	landlock_add_rule	sys_landlock_add_rule
 446	common	landlock_restrict_self	sys_landlock_restrict_self
 447	common	memfd_secret		sys_memfd_secret
+448	common	kernel_2d_memcpy        sys_kernel_2d_memcpy
+449	common	change_vruntime         sys_change_vruntime
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
diff -u -r linux-5.14.6/include/linux/sched.h linux-5.14.6-A3/include/linux/sched.h
--- linux-5.14.6/include/linux/sched.h	2021-09-18 15:44:05.000000000 +0400
+++ linux-5.14.6-A3/include/linux/sched.h	2021-12-14 18:11:52.987053885 +0400
@@ -475,6 +475,7 @@
 	u64				prev_sum_exec_runtime;
 
 	u64				nr_migrations;
+	u64 				delaytime;
 
 	struct sched_statistics		statistics;
 
diff -u -r linux-5.14.6/kernel/sched/core.c linux-5.14.6-A3/kernel/sched/core.c
--- linux-5.14.6/kernel/sched/core.c	2021-09-18 15:44:05.000000000 +0400
+++ linux-5.14.6-A3/kernel/sched/core.c	2021-12-14 18:15:58.607054301 +0400
@@ -3956,6 +3956,7 @@
 	p->se.prev_sum_exec_runtime	= 0;
 	p->se.nr_migrations		= 0;
 	p->se.vruntime			= 0;
+	p->se.delaytime			= 0;
 	INIT_LIST_HEAD(&p->se.group_node);
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
diff -u -r linux-5.14.6/kernel/sched/fair.c linux-5.14.6-A3/kernel/sched/fair.c
--- linux-5.14.6/kernel/sched/fair.c	2021-09-18 15:44:05.000000000 +0400
+++ linux-5.14.6-A3/kernel/sched/fair.c	2021-12-14 17:58:50.697052562 +0400
@@ -812,6 +812,7 @@
 	schedstat_add(cfs_rq->exec_clock, delta_exec);
 
 	curr->vruntime += calc_delta_fair(delta_exec, curr);
+	curr->vruntime += curr->delaytime;
 	update_min_vruntime(cfs_rq);
 
 	if (entity_is_task(curr)) {
diff -u -r linux-5.14.6/kernel/sys.c linux-5.14.6-A3/kernel/sys.c
--- linux-5.14.6/kernel/sys.c	2021-09-18 15:44:05.000000000 +0400
+++ linux-5.14.6-A3/kernel/sys.c	2021-12-14 17:59:46.167052656 +0400
@@ -200,6 +200,46 @@
 	return error;
 }
 
+SYSCALL_DEFINE2(change_vruntime, pid_t, pid_val, long, delta)
+{
+	struct task_struct *p;
+	struct pid *pid_struct;
+
+	pid_struct=find_get_pid(pid_val);
+	p=pid_task(pid_struct,PIDTYPE_PID);
+	p->se.delaytime += delta*(1000000);
+
+
+	return 0;
+}
+
+SYSCALL_DEFINE4(kernel_2d_memcpy, float *, dst, float *, src, int, rows, int, cols)
+{
+  int i, j;
+  for (i = 0; i < rows; i++)
+  {
+    for (j = 0; j < cols; j++)
+    {
+      float val;
+      if (__copy_from_user(&val, src, sizeof(float)))
+      {
+        printk(KERN_INFO "Error copying from user space!\n");
+        return -1;
+      }
+      if (__copy_to_user(dst, &val, sizeof(float)))
+      {
+        printk(KERN_INFO "Error copying to user space!\n");
+        return -1;
+      }
+      src++;
+      dst++;
+    }
+  }
+
+  printk(KERN_INFO "Successfully Copied Source Matrix to Destination Matrix!\n");
+  return 0;
+}
+
 SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
 {
 	struct task_struct *g, *p;
